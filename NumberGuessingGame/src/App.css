.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

body {
  background-color: rgb(100, 99, 99);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 15%;
}

.container {
  padding: 10px;
  border: 2px solid whitesmoke;
  width: 500px;
  border-radius: 16px;
  display: flex;
  flex-direction: column;
  color: rgb(255, 255, 255);
}

.head {
  font-weight: 600;
  font-size: 20px;
  margin-bottom: 20px;
}

input {
  padding: 10px;
  border: 1px solid black;
  border-radius: 10px;
}

input:hover {
  background-color: rgb(158, 156, 152);
}

input:focus {
  border: 0px;
  background-color: beige;
}








/* 
 
Tic Tac Toe CPP

#include<iostream>
#include <ctime>

void drawBoard(char *spaces);
void playerMove(char *spaces, char player);
void computerMove(char *spaces, char computer);
bool checkWinner(char *spaces, char player, char computer);
bool checkTie(char *spaces);
  
int main() {
    char spaces[9] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};
    char player = 'X';
    char computer = 'O';
    bool running = true;
    
    drawBoard(spaces);
    
    while(running) {
        playerMove(spaces, player);
        drawBoard(spaces);
    }
    
    return  0;
}

void drawBoard(char *spaces) {
    std::cout<< '\n';
    std::cout << "     |     |      " << "\n";
    std::cout << "   " <<spaces[0] << " | " <<spaces[1] << "   |  " <<spaces[2] << "    " << "\n";
    std::cout << "_____|_____|_____ " << "\n";
    std::cout << "     |     |      " << "\n";
    std::cout << "   " <<spaces[3] << " | " <<spaces[4] << "   |  " <<spaces[5] << "    " << "\n";
    std::cout << "_____|_____|_____ " << "\n";
    std::cout << "     |     |      " << "\n";
    std::cout << "   " <<spaces[6] << " | " <<spaces[7] << "   |  " <<spaces[8] << "    " << "\n";
    std::cout<< '\n';
    
    
}

void playerMove(char *spaces, char player) {
    int number;
    do {
        std::cout<< "Enter a spot to palce a marker (1-9)";
        std::cin >> number;
        number--;
        if(spaces[number] == ' ') {
            spaces[number] = player;
            break;
        }
    } while(!number > 0 || !number < 8);
}
void computerMove(char *spaces, char computer) {
    
}
bool checkWinner(char *spaces, char player, char computer) {
  return 0;  
}
bool checkTie(char *spaces) {
return 0;
} */
